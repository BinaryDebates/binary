[{"/Users/daviswong/Desktop/binary/binary/src/index.tsx":"1","/Users/daviswong/Desktop/binary/binary/src/App.tsx":"2","/Users/daviswong/Desktop/binary/binary/src/About.tsx":"3","/Users/daviswong/Desktop/binary/binary/src/components/NavBar.tsx":"4","/Users/daviswong/Desktop/binary/binary/src/components/Login.tsx":"5","/Users/daviswong/Desktop/binary/binary/src/DebateRequests/DebateRequests.tsx":"6","/Users/daviswong/Desktop/binary/binary/src/DebateProfile/DebateProfile.tsx":"7"},{"size":493,"mtime":1698021470143,"results":"8","hashOfConfig":"9"},{"size":957,"mtime":1698117418481,"results":"10","hashOfConfig":"9"},{"size":1906,"mtime":1698452183587,"results":"11","hashOfConfig":"9"},{"size":1701,"mtime":1698120706773,"results":"12","hashOfConfig":"9"},{"size":1177,"mtime":1698022588230,"results":"13","hashOfConfig":"9"},{"size":1455,"mtime":1698109519727,"results":"14","hashOfConfig":"9"},{"size":947,"mtime":1698121064223,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"1tgxxpl",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/daviswong/Desktop/binary/binary/src/index.tsx",["42","43","44","45","46","47","48"],[],"import ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport { DebateRequests } from './DebateRequests/DebateRequests';\nimport { App } from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n   <App/> \n  </React.StrictMode>\n);\n","/Users/daviswong/Desktop/binary/binary/src/App.tsx",[],[],"/Users/daviswong/Desktop/binary/binary/src/About.tsx",[],[],"/Users/daviswong/Desktop/binary/binary/src/components/NavBar.tsx",["49","50","51"],[],"import React, { useEffect, useState } from 'react'\nimport  styles from './NavBar.module.css';\nimport binaryLogo from '../imgs/binaryLogo.png'\nimport {gapi} from 'gapi-script';\nimport { LoginPopup } from './Login';\n\nconst clientId = '1020258403267-qacp7l47fmp5a1669ejpgsm9lufs2kgt.apps.googleusercontent.com';\n\nexport interface NavBarProps {\n    setLoginPopup: () => void;\n}\n\nconst NavBar = (navBarProps: NavBarProps) => {\n  // adding the states \n  const [isActive, setIsActive] = useState(false);\n\n  //add the active class\n  const toggleActiveClass = () => {\n    setIsActive(!isActive);\n  };\n\n\n  //clean up function to remove the active class\n  const removeActive = () => {\n    setIsActive(false)\n  }\n\n  useEffect(() => {\n    function start() {\n        gapi.client.init({\n            clientId:clientId,\n            scope:\"\"\n        })\n    }\n\n    gapi.load('client:auth2', start);\n  })\n\n  \n  return (\n    <div >\n        <nav className={styles.navbar}>\n          <a href='/' className={styles.navLink}>\n            <img className={styles.binaryLogo} src={binaryLogo}/>\n          </a> \n          <ul className={`${styles.navMenu} ${isActive ? styles.active : ''}`}>\n            <li onClick={removeActive}>\n              <a href='/about' className={styles.navLink}>About</a>\n            </li>\n            <li onClick={removeActive}>\n              <a href='/' className={styles.navLink}>Request a debate</a>\n            </li>\n     \n          </ul>\n          <div className={styles.login}>\n          <button className={styles.loginButton} onClick = {() => navBarProps.setLoginPopup()}>\n            Start using\n            </button> \n          </div>\n        </nav>\n    </div>\n  );\n}\n\n\nexport default NavBar;","/Users/daviswong/Desktop/binary/binary/src/components/Login.tsx",["52"],[],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport {GoogleLogin} from 'react-google-login';\nimport styles from './Login.module.css';\nimport { Modal } from 'react-bootstrap';\n\n// TODO: move this!!!\nconst clientId = '1020258403267-qacp7l47fmp5a1669ejpgsm9lufs2kgt.apps.googleusercontent.com';\n\nconst onSuccess = () => {\n    console.log(\"Login success.\");\n}\n\nconst onFailure = () => {\n    console.log(\"Login failed.\");\n}\n\nexport interface LoginPopupProps {\n    show: boolean;\n    setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nexport function LoginPopup(loginPopupProps: LoginPopupProps) {\n   return (\n        <Modal  \n            show={loginPopupProps.show} onHide={() =>loginPopupProps.setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login with a social media account</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <div className={styles.login}>\n            <GoogleLogin clientId={clientId}\n            buttonText = 'Login with Google'\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            >\n            </GoogleLogin> \n        </div>\n        </Modal.Body>\n      </Modal>\n    ) ;\n}\n","/Users/daviswong/Desktop/binary/binary/src/DebateRequests/DebateRequests.tsx",["53","54"],[],"import React from \"react\"\nimport NavBar from \"../components/NavBar\";\nimport  styles from './DebateRequests.module.css';\nimport rfkvshotez from '../imgs/rfkvshotez.jpeg';\nexport const DebateRequests = () =>{\n\n\n    return (\n       <div className={styles.debateRequests}>\n        <div className={styles.debateRequestsHeader}>\n        <p className={styles.debateRequestsTitle}>\n            Request for debates\n        </p>\n        <p className={styles.debateRequestsSubitle}>\n            Vote on the matchups you want to see\n        </p> \n        </div>\n       \n        <ul className={styles.navMenu}>\n            <li>\n            <a href='/debateProfile' className={styles.navLink}>\n            <DebateSection title={'RFK vs Hotez'} summary={'Debate on the safety and efficacy of vaccines'} imgRoute={rfkvshotez}/>  \n            </a>\n            </li>\n     \n          </ul>\n       </div>\n      );\n}\n\n\ninterface DebateSectionProps {\n    title:string;\n    summary: string;\n    imgRoute: string;\n}\nconst DebateSection = (debateSectionProps:DebateSectionProps) => {\n    return(\n    <div className={styles.debateSection}>\n         <img className={styles.debateSectionImg}  src={debateSectionProps.imgRoute}/>\n        <div className={styles.debateInnerSection}>\n            <h1 className={styles.debateSectionTitle}>{debateSectionProps.title}</h1>\n            <p className={styles.debateSectionSummary}>{debateSectionProps.summary}</p>\n        </div>\n    </div>)\n}","/Users/daviswong/Desktop/binary/binary/src/DebateProfile/DebateProfile.tsx",["55","56"],[],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport  styles from './DebateProfile.module.css';\nimport rfkvshotez from '../imgs/rfkvshotez.jpeg';\n\n\nexport const DebateProfile = () => {\n    // static for now\n    return(\n        <div className={styles.debateProfile}>\n              <img className={styles.debateProfileImg}  src={rfkvshotez}/>\n            <div className={styles.debateProfileHeader}>\n                <div>\n                    <h1 className={styles.debateSectionTitle}>{'RFK vs Hotez'}</h1>\n                    <p className={styles.debateSectionSummary}>{'Debate on the safety and efficacy of vaccines'}</p> \n                </div>\n                <div className={styles.buttons}>\n                    <button className={styles.shareButton}>Share</button>\n                    <button className={styles.pledgeButton}>$1.2mil Pledged</button>\n                </div>\n            </div>\n\n        </div>\n    );\n};",{"ruleId":"57","severity":1,"message":"58","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":5,"column":3,"nodeType":"59","messageId":"60","endLine":5,"endColumn":22},{"ruleId":"57","severity":1,"message":"62","line":6,"column":3,"nodeType":"59","messageId":"60","endLine":6,"endColumn":17},{"ruleId":"57","severity":1,"message":"63","line":7,"column":20,"nodeType":"59","messageId":"60","endLine":7,"endColumn":26},{"ruleId":"57","severity":1,"message":"64","line":8,"column":3,"nodeType":"59","messageId":"60","endLine":8,"endColumn":9},{"ruleId":"57","severity":1,"message":"65","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":8},{"ruleId":"57","severity":1,"message":"66","line":11,"column":10,"nodeType":"59","messageId":"60","endLine":11,"endColumn":24},{"ruleId":"57","severity":1,"message":"67","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":20},{"ruleId":"57","severity":1,"message":"68","line":18,"column":9,"nodeType":"59","messageId":"60","endLine":18,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":44,"column":13,"nodeType":"71","endLine":44,"endColumn":66},{"ruleId":"57","severity":1,"message":"72","line":1,"column":43,"nodeType":"59","messageId":"60","endLine":1,"endColumn":51},{"ruleId":"57","severity":1,"message":"73","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":40,"column":10,"nodeType":"71","endLine":40,"endColumn":87},{"ruleId":"57","severity":1,"message":"74","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":11,"column":15,"nodeType":"71","endLine":11,"endColumn":75},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'createBrowserRouter' is defined but never used.","'RouterProvider' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'DebateRequests' is defined but never used.","'LoginPopup' is defined but never used.","'toggleActiveClass' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'NavBar' is defined but never used.","'useParams' is defined but never used."]