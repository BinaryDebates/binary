[{"/Users/daviswong/Desktop/binary/binary/src/index.tsx":"1","/Users/daviswong/Desktop/binary/binary/src/App.tsx":"2","/Users/daviswong/Desktop/binary/binary/src/About.tsx":"3","/Users/daviswong/Desktop/binary/binary/src/DebateRequests/DebateRequests.tsx":"4","/Users/daviswong/Desktop/binary/binary/src/DebateProfile/DebateProfile.tsx":"5","/Users/daviswong/Desktop/binary/binary/src/DebateProfile/Participant.ts":"6","/Users/daviswong/Desktop/binary/binary/src/Login.tsx":"7","/Users/daviswong/Desktop/binary/binary/src/NavBar.tsx":"8"},{"size":540,"mtime":1698466674861,"results":"9","hashOfConfig":"10"},{"size":935,"mtime":1699555205468,"results":"11","hashOfConfig":"10"},{"size":1933,"mtime":1698456939508,"results":"12","hashOfConfig":"10"},{"size":1739,"mtime":1699555223952,"results":"13","hashOfConfig":"10"},{"size":2399,"mtime":1699560707613,"results":"14","hashOfConfig":"10"},{"size":343,"mtime":1699560450427,"results":"15","hashOfConfig":"10"},{"size":2411,"mtime":1699555584483,"results":"16","hashOfConfig":"10"},{"size":1734,"mtime":1699629709852,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"1tgxxpl",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/daviswong/Desktop/binary/binary/src/index.tsx",["46","47","48","49","50","51","52"],[],"import ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport { DebateRequests } from './DebateRequests/DebateRequests';\nimport { App } from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n   <App/> \n  </React.StrictMode>\n);\n",["53"],"/Users/daviswong/Desktop/binary/binary/src/App.tsx",[],[],"/Users/daviswong/Desktop/binary/binary/src/About.tsx",[],[],"/Users/daviswong/Desktop/binary/binary/src/DebateRequests/DebateRequests.tsx",["54","55","56"],[],"import React from \"react\"\nimport NavBar from \"../NavBar\";\nimport  styles from './DebateRequests.module.css';\nimport rfkvshotez from '../imgs/rfkvshotez.jpeg';\nimport { DebateProfile } from \"../DebateProfile/DebateProfile\";\nimport { useNavigate } from \"react-router-dom\";\nexport const DebateRequests = () =>{\n\n\n    return (\n       <div className={styles.debateRequests}>\n        <div className={styles.debateRequestsHeader}>\n        <p className={styles.debateRequestsTitle}>\n            Request for debates\n        </p>\n        <p className={styles.debateRequestsSubitle}>\n            Vote on the matchups you want to see\n        </p> \n        </div>\n       \n        <ul className={styles.navMenu}>\n            <li>\n            {/* <a href='/debateProfile' className={styles.navLink}> */}\n            <DebateSection title={'RFK vs Hotez'} summary={'Debate on the safety and efficacy of vaccines'} imgRoute={rfkvshotez}/>  \n            {/* </a> */}\n            </li>\n     \n          </ul>\n       </div>\n      );\n}\n\n\ninterface DebateSectionProps {\n    title:string;\n    summary: string;\n    imgRoute: string;\n}\nconst DebateSection = (debateSectionProps:DebateSectionProps) => {\n    let navigate = useNavigate(); \n    const toDebateProfile = () =>{ \n      let path = `/debateProfile`; \n      navigate(path);\n    }\n\n    return(\n    <div className={styles.debateSection}>\n         <img className={styles.debateSectionImg} onClick={toDebateProfile}  src={debateSectionProps.imgRoute}/>\n        <div className={styles.debateInnerSection}>\n            <h1 className={styles.debateSectionTitle}>{debateSectionProps.title}</h1>\n            <p className={styles.debateSectionSummary}>{debateSectionProps.summary}</p>\n        </div>\n    </div>\n    )\n}","/Users/daviswong/Desktop/binary/binary/src/DebateProfile/DebateProfile.tsx",["57","58","59"],[],"/Users/daviswong/Desktop/binary/binary/src/DebateProfile/Participant.ts",["60"],[],"/Users/daviswong/Desktop/binary/binary/src/Login.tsx",["61"],[],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport {GoogleLogin} from 'react-google-login';\nimport styles from './Login.module.css';\nimport { Modal } from 'react-bootstrap';\nimport TwitterLogin from \"react-twitter-login\";\nimport GoogleButton from 'react-google-button';\n// TODO: SETUP CLIENT ID PROPERLY BEFORE LAUNCH!!!\nconst googleClientId = '1020258403267-qacp7l47fmp5a1669ejpgsm9lufs2kgt.apps.googleusercontent.com';\nconst twitterClientId = 'YjlENWwtLTNFTm4wdlY0a04wLU06MTpjaQ';\nconst twitterClientSecret = 'wgeeFAKLfqEeSpJJVtz11bpmAaf6R2ToAcKaRBHG4mWT6-BRyj';\n\nconst onSuccess = () => {\n    console.log(\"Login success.\");\n}\n\nconst onFailure = () => {\n    console.log(\"Login failed.\");\n}\n\nexport interface LoginPopupProps {\n    show: boolean;\n    setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nexport function LoginPopup(loginPopupProps: LoginPopupProps) {\n   return (\n        <Modal  \n            show={loginPopupProps.show} onHide={() =>loginPopupProps.setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login with a social media account</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <div className={styles.login}>\n            <GoogleLogin className={styles.googleLossgin} clientId={googleClientId}\n            buttonText = 'Sign in with Google'\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            render={renderProps => (\n                <GoogleButton style={{\n                    borderStyle: 'solid',\n                    borderColor: 'lightgray',\n                    alignItems:'center',\n                    width:'300px',\n                    fontSize: '16px',\n                    backgroundColor:'white',\n                    height: '52px',\n                    boxShadow:'unset',\n                    color:'gray',\n                    display:'flex',\n                    justifyContent:'center',\n                    borderRadius:'8px',\n                }} onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign in with Google</GoogleButton>\n              )}\n            >\n            </GoogleLogin> \n        </div>\n        <div className={styles.login}>\n            <TwitterLogin\n                consumerKey={twitterClientId}\n                consumerSecret={twitterClientSecret}\n                authCallback={() =>{}}\n            />\n        </div>\n        </Modal.Body>\n      </Modal>\n    ) ;\n}\n","/Users/daviswong/Desktop/binary/binary/src/NavBar.tsx",["62","63","64"],[],{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":23},{"ruleId":"65","severity":1,"message":"69","line":5,"column":3,"nodeType":"67","messageId":"68","endLine":5,"endColumn":22},{"ruleId":"65","severity":1,"message":"70","line":6,"column":3,"nodeType":"67","messageId":"68","endLine":6,"endColumn":17},{"ruleId":"65","severity":1,"message":"71","line":7,"column":20,"nodeType":"67","messageId":"68","endLine":7,"endColumn":26},{"ruleId":"65","severity":1,"message":"72","line":8,"column":3,"nodeType":"67","messageId":"68","endLine":8,"endColumn":9},{"ruleId":"65","severity":1,"message":"73","line":9,"column":3,"nodeType":"67","messageId":"68","endLine":9,"endColumn":8},{"ruleId":"65","severity":1,"message":"74","line":11,"column":10,"nodeType":"67","messageId":"68","endLine":11,"endColumn":24},{"ruleId":"75","replacedBy":"76"},{"ruleId":"65","severity":1,"message":"77","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"78","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":48,"column":10,"nodeType":"81","endLine":48,"endColumn":113},{"ruleId":"65","severity":1,"message":"82","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":21,"column":15,"nodeType":"81","endLine":21,"endColumn":75},{"ruleId":"79","severity":1,"message":"80","line":57,"column":13,"nodeType":"81","endLine":57,"endColumn":80},{"ruleId":"83","severity":1,"message":"84","line":4,"column":18,"nodeType":"67","messageId":"85","endLine":4,"endColumn":31},{"ruleId":"65","severity":1,"message":"86","line":1,"column":43,"nodeType":"67","messageId":"68","endLine":1,"endColumn":51},{"ruleId":"65","severity":1,"message":"87","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"65","severity":1,"message":"88","line":18,"column":9,"nodeType":"67","messageId":"68","endLine":18,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":44,"column":13,"nodeType":"81","endLine":44,"endColumn":66},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'createBrowserRouter' is defined but never used.","'RouterProvider' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'DebateRequests' is defined but never used.","no-new-object",["89"],"'NavBar' is defined but never used.","'DebateProfile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","@typescript-eslint/no-redeclare","'ParticipantId' is already defined.","redeclared","'useState' is defined but never used.","'LoginPopup' is defined but never used.","'toggleActiveClass' is assigned a value but never used.","no-object-constructor"]